//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SCENE_CONSTANT_BUFFER
// {
//
//   row_major float4x4 inverse_view_projection;// Offset:    0 Size:    64
//   float4 camera_position;            // Offset:   64 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SCENE_CONSTANT_BUFFER             cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB1[4], immediateIndexed
dcl_input v0.xyw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   o1.x <- <main return value>.world_position.x; o1.y <- <main return value>.world_position.y; o1.z <- <main return value>.world_position.z; o1.w <- <main return value>.world_position.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 5 "C:\Users\2230237\Desktop\シェーダー点光源見本\HLSL\SkyBoxVS.hlsl"
mov r0.z, l(1.000000)  // r0.z <- position.z

#line 7
mov r0.xyw, v0.xyxw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.w <- vout.position.w
mov r0.z, r0.z  // r0.z <- vout.position.z

#line 10
mul r1.xyzw, v0.xxxx, cb1[0].xyzw
mul r2.xyzw, v0.yyyy, cb1[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, cb1[2].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, v0.wwww, cb1[3].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw  // r1.x <- p.x; r1.y <- p.y; r1.z <- p.z; r1.w <- p.w

#line 11
div r1.xyzw, r1.xyzw, r1.wwww  // r1.x <- vout.world_position.x; r1.y <- vout.world_position.y; r1.z <- vout.world_position.z; r1.w <- vout.world_position.w

#line 12
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
ret 
// Approximately 14 instruction slots used
